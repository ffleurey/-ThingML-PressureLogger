/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;
import org.thingml.generated.network.*;
public class Main {
//Things
public static JavaClient JavaClient_gw;
public static void main(String args[]) {
//Things
JavaClient_gw = (JavaClient) new JavaClient("gw (JavaClient)", (int) (0)).buildBehavior(null, null);
//Connecting internal ports...
//Connectors
//Init instances (queues, etc)
JavaClient_gw.init();
//Network components for external connectors
/*$NETWORK$*/
Serial null_Serial = (Serial) new Serial("/dev/ttyACM0", 115200).buildBehavior(null, null);

//External Connectors
/*$EXT CONNECTORS$*/
null_Serial.getSensor_port().addListener(JavaClient_gw.getSensor_port());
JavaClient_gw.getSensor_port().addListener(null_Serial.getSensor_port());

/*$START$*/
null_Serial.init().start();

JavaClient_gw.start();
//Hook to stop instances following client/server dependencies (clients firsts)
Runtime.getRuntime().addShutdownHook(new Thread() {
public void run() {
JavaClient_gw.stop();
/*$STOP$*/
null_Serial.stop();

}
});

}
}
